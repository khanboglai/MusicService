services:    
  postgres:
    image: postgres:16.4
    container_name: listener_postgres_db
    environment:
      POSTGRES_USER: debug
      POSTGRES_PASSWORD: pswd
      POSTGRES_DB: listener
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - music_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U debug -d listener" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  listener_web:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: web
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      # - elasticsearch
      # - rabbitmq
    networks:
      - music_network
    environment:
      DB_USER: debug
      DB_PASSWORD: pswd
      DB_HOST: listener_postgres_db
      DB_PORT: 5433
      DB_NAME: listener
      # SECRET_KEY: 'z9t9w6dluej8fupds3fvefoozz6wlymglropksbavn32ehin9lclertyweco4rhri2weg1r3s0x4024yup42ufg4rgt6830tbfvm'
      # ALGORITHM: 'HS256'
      # ELASTICSEARCH_HOST: elasticsearch
      # ELASTICSEARCH_PORT: 9200
    volumes:
      - ./app:/app

volumes:
  pgdata:
    driver: local

networks:
  music_network:
    name: music_network